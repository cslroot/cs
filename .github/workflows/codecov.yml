name: Upload CodeCov Report
on: [push, pull_request]

env:
  VCPKG_ROOT: ${{github.workspace}}/third/vcpkg
  VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}/third/vcpkg/bincache
  TRIPLET: windows-cl-x64-ninja

jobs:
  run:
    runs-on: windows-latest
    name: Build, Test , Upload Code Coverage Report
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          id: checkout_code

      - name: "setup ninja"
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: "Create directory '${{ env.VCPKG_DEFAULT_BINARY_CACHE }}'"
        run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
        shell: bash

      - name: Cache/Restore vcpkg
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.VCPKG_ROOT }}
            !${{ env.VCPKG_ROOT }}/buildtrees
            !${{ env.VCPKG_ROOT }}/packages
            !${{ env.VCPKG_ROOT }}/downloads
            !${{ env.VCPKG_ROOT }}/installed
          key: |
            ${{ runner.os }}-${{ env.TRIPLET }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('vcpkg.json') }}-${{ hashFiles('.git/modules/third/vcpkg/HEAD') }}
          # CACHE_VERSION is used to clear cache explicitly

      - name: Configure build for amd64(Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      # - name: Setup MSBuild and add to PATH
      #   uses: microsoft/setup-msbuild@v1.0.2
      #   id: setup_msbuild

      # - name: Run MSBuild
      #   id: run_msbuild
      #   run: msbuild /p:Configuration=Debug /p:Platform=x86 HelloCovDemo.sln

      # - name: Setup VSTest and add to PATH
      #   uses: darenm/Setup-VSTest@v1
      #   id: setup_vstest

      - name: cmake configure
        run: |
          cmake --preset "windows-cl-x64-ninja"

      - name: cmake build
        run: |
          cmake --build --preset "${{env.TRIPLET}}"

      - name: Setup OpenCppCoverage and add to PATh
        id: setup_opencppcoverage
        run: |
          choco install OpenCppCoverage -y
          echo "C:\Program Files\OpenCppCoverage" >> $env:GITHUB_PATH

      - name: Generate Report
        id: generate_test_report
        shell: cmd
        run: OpenCppCoverage --sources src --modules=build\${{env.TRIPLET}}\bin\Debug\cs.* --export_type cobertura:cs.xml -- .\build\${{env.TRIPLET}}\bin\Debug\cs.test.exe
      - name: Upload Report to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./cs.xml
          fail_ci_if_error: true
          functionalities: fix
